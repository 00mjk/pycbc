; inspiral pipeline configuration script.
;
; $Id$
;
;
; this is the configuration file for the inspiral DAG generation program 
; lalapps_inspiral_pipe that creates a condor DAG to run the inspiral
; analysis pipeline. It can be use to perform a simple single interferometer
; or a double coincident analysis.

; GENERAL SECTIONS 
;;;;;;;;;;;;;;;;;;;

[ahope]
;pregenerated-template-bank=/home/spxiwh/aLIGO/ahope_devel/testing/bank.xml.gz
h1-channel-name = H1:LDAS-STRAIN
l1-channel-name = L1:LDAS-STRAIN
;h2-channel-name = H2:LDAS-STRAIN

[ahope-datafind]
; Choices: AT_RUNTIME_MULTIPLE: Find frame files at runtime, use one datafind
;                               query for every science segment.
;          AT_RUNTIME_SINGLE: Find frame files at runtime, use one datafind
;                             query for every interferometer.
datafind-method = AT_RUNTIME_SINGLE
datafind-h1-frame-type = H1_LDAS_C02_L2
datafind-l1-frame-type = L1_LDAS_C02_L2
;datafind-h2-frame-type = H2_LDAS_C02_L2
; Set this to sepcify the datafind server. If this is not set the code will
; use the value in ${LIGO_DATAFIND_SERVER}
;datafind-ligo-datafind-server = ""

[ahope-segments]
; Choices: AT_RUNTIME: Generate all veto segments when running ahope
;          CAT2_PLUS_DAG: Generate CAT1 at runtime and 2,3,4,5 in the workflow
;          CAT3_PLUS_DAG: Generate CAT1,2 at runtime and 3,4,5 in the workflow
;          CAT4_PLUS_DAG: Generate CAT1,2,3 at runtime and 4,5 in the workflow
segments-method = CAT3_PLUS_DAG
segments-H1-science-name = H1:DMT-SCIENCE:4
segments-L1-science-name = L1:DMT-SCIENCE:4
;segments-V1-science-name = V1:ITF_SCIENCEMODE:6
segments-database-url = https://segdb.ligo.caltech.edu
; NOTE: This veto definer does not need "fake vetoes" like ihope does
segments-veto-definer-file = H1L1V1-S6_CBC_LOWMASS_B_OFFLINE-937473702-0.xml

[executables]
; setup of condor universe and location of executables
tmpltbank         = /home/ahnitz/local/pycbc/bin/pycbc_geom_nonspinbank
inspiral          = /home/ahnitz/local/pycbc/bin/pycbc_inspiral
splittable = /home/ahnitz/local/lalsuite/bin/lalapps_splitbank
segment_query = /home/ahnitz/local/lalsuite/bin/ligolw_segment_query
segments_from_cats = /home/ahnitz/local/lalsuite/bin/ligolw_segments_from_cats

[datafind]
urltype=file

[tmpltbank&inspiral]
; Common options for template bank and inspiral
pad-data = 8
psd-segment-length = 64
psd-segment-stride = 32
psd-inverse-length = 16
psd-estimation = median
sample-rate = 4096
strain-high-pass = 30

[tmpltbank]
; template bank generation parameters -- added to all tmpltbank jobs
f-low = 40
f-upper = 2048
delta-f = .001
min-match = 0.97
pn-order = threePointFivePN
min-mass1 = 1
max-mass1 = 3
min-mass2 = 1
max-mass2 = 3

[tmpltbank-h1]
; h1 specific tmpltbank parameters
channel-name = ${ahope|h1-channel-name}

[tmpltbank-l1]
; l1 specific tmpltbank parameters
channel-name = ${ahope|l1-channel-name}

[inspiral]
; inspiral analysis parameters -- added to all inspiral jobs
; These options will affect how ahope places inpsiral jobs
snr-threshold = 5.5
low-frequency-cutoff = 40
cluster-method = window
cluster-window = 1
chisq-bins = 16
segment-start-pad = 64
segment-end-pad = 16
segment-length = 512
approximant = SPAtmplt
order = 7
verbose = 

[inspiral-h1]
; h1 specific inspiral parameters
channel-name = ${ahope|h1-channel-name}

[inspiral-l1]
; l1 specific inspiral parameters
channel-name = ${ahope|l1-channel-name}

[splittable]
; options for splittable job
number-of-banks = 2
minimal-match = 0.95
