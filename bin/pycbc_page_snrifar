#!/usr/bin/python
""" Make table of the foreground coincident events
"""
import argparse, h5py, numpy, logging
import matplotlib
matplotlib.use('Agg')
import pylab

parser = argparse.ArgumentParser()
# General required options
parser.add_argument('--trigger-file')
parser.add_argument('--verbose', action='count')
parser.add_argument('--output-file')
args = parser.parse_args()

if args.verbose:
    log_level = logging.INFO
    logging.basicConfig(format='%(asctime)s : %(message)s', level=log_level)
    
logging.info('Read in the data')
f = h5py.File(args.trigger_file, 'r')

print f.attrs['background_time'], f.attrs['foreground_time']

stat1 = f['foreground/stat1'][:]
stat2 = f['foreground/stat2'][:]
cstat_fore = (stat1**2.0 + stat2**2.0) ** 0.5
cstat_fore.sort()
cstat_rate = numpy.arange(len(cstat_fore), 0, -1) / f.attrs['foreground_time'] * 3.15569e7
logging.info('Found %s foreground triggers' % len(stat1))

back_stat1 = f['background/stat1'][:]
back_stat2 = f['background/stat2'][:]
back_ifar = f['background/ifar'][:]
cstat_back = (back_stat1**2.0 + back_stat2**2.0) ** 0.5
logging.info('Found %s background triggers' % len(back_stat1))

pylab.figure(1)
pylab.yscale('log')
pylab.scatter(cstat_back, 1.0/back_ifar, linewidth=0, color='black', label='Background')
pylab.scatter(cstat_fore, cstat_rate, linewidth=0, color='blue', marker='^', label='Foreground')
pylab.ylabel('Cumulative Rate (1/year)')
pylab.xlabel('Combined NewSNR')
pylab.legend()
pylab.grid()
pylab.savefig(args.output_file)
