#!/usr/bin/python
""" Make table of the foreground coincident events
"""
import argparse, h5py, numpy, logging, pycbc.results

parser = argparse.ArgumentParser()
# General required options
parser.add_argument('--foreground-file')
parser.add_argument('--bank-file')
parser.add_argument('--verbose', action='count')
parser.add_argument('--output-file')
args = parser.parse_args()

if args.verbose:
    log_level = logging.INFO
    logging.basicConfig(format='%(asctime)s : %(message)s', level=log_level)
    
logging.info('Read in the foreground data')
f = h5py.File(args.foreground_file, 'r')
stat1 = f['foreground/stat1'][:]
stat2 = f['foreground/stat2'][:]
time1 = f['foreground/time1'][:]
time2 = f['foreground/time2'][:]
template_id = f['foreground/template_id'][:]
logging.info('Found %s foreground triggers' % len(stat1))

#logging.info('Read in the template bank data to get template parameters')
#f = h5py.File(args.bank_file, 'r')
#mass1 = f['mass1'][:]
#mass2 = f['mass2'][:]
#spin1z = f['spin1z'][:]
#spin2z = f['spin2z'][:]

logging.info('Making table of foreground triggers')
html_table = pycbc.results.table([(stat1**2.0+stat2**2.0)**0.5,  time1], 
                            ['NewSNR', 'Time'], 
                            page_size=10,
                           )
print  html_table
f = open(args.output_file, 'w')
f.write(html_table)
